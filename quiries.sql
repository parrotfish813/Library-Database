SELECT CARD_ID, FEE_DUE
FROM CARDHOLDER
WHERE FEE_DUE > 0.00
GROUP BY CARD_ID, FEE_DUE
ORDER BY FEE_DUE;

/* Obtain the number of books checked out by a job that are greater than zero. */
SELECT  JOB.NAME, COUNT(CHECKOUT.BOOK_ID) AS CHECKCOUNT
FROM JOB JOIN EMPLOYEE
ON JOB.JOB_ID = EMPLOYEE.JOB_ID
JOIN CHECKOUT
ON EMPLOYEE.EMP_ID = CHECKOUT.EMP_ID
HAVING COUNT(CHECKOUT.BOOK_ID) > 0
GROUP BY JOB.NAME;


/* Obtain the number of cardholders that have accessed a publishers periodicals */
SELECT PUBLISHER.NAME, PERIODICAL.NAME, COUNT(ONLINE_PERIODICAL.CARD_ID) AS CARDCOUNT
FROM PUBLISHER JOIN PERIODICAL
ON PUBLISHER.PUBLISH_ID = PERIODICAL.PUBLISH_ID
JOIN ONLINE_PERIODICAL
ON PERIODICAL.PER_ID = ONLINE_PERIODICAL.PER_ID
GROUP BY PUBLISHER.NAME, PERIODICAL.NAME
ORDER BY PUBLISHER.NAME;


/* The amount for fees due for books. */
SELECT AUTHOR.FNAME, BOOK.TITLE, SUM(CARDHOLDER.FEE_DUE) AS TOTAL
FROM AUTHOR JOIN BOOK
ON AUTHOR.AUTHOR_ID = BOOK.AUTHOR_ID
JOIN CHECKOUT
ON BOOK.BOOK_ID = CHECKOUT.BOOK_ID
JOIN CARDHOLDER
ON CHECKOUT.CARD_ID = CARDHOLDER.CARD_ID
GROUP BY AUTHOR.FNAME, BOOK.TITLE
ORDER BY TOTAL;

/* Finds the number of people that have accessed audiobooks longer than 10 hours. */
SELECT AUDIOBOOK.NAME, LENGTH, COUNT(ONLINE_AUDIO.CARD_ID) AS CHECKED
FROM AUDIOBOOK JOIN ONLINE_AUDIO
ON AUDIOBOOK.AUDIO_ID = ONLINE_AUDIO.AUDIO_ID
WHERE LENGTH > 600
GROUP BY AUDIOBOOK.NAME, LENGTH
ORDER BY LENGTH;

/* Average length of movies in the fantasy category. */
SELECT PUBLISHER.NAME, AVG(MOVIE.LENGTH) AS AVGLENGTH
FROM PUBLISHER JOIN MOVIE USING (PUBLISH_ID)
WHERE MOVIE.CATEGORY = ‘Fantasy’
GROUP BY PUBLISHER.NAME
ORDER BY AVGLENGTH;

/* The longest ebook from each publisher. */
SELECT PUBLISHER.NAME, MAX(EBOOK.PAGES) AS MAXPAGES
FROM PUBLISHER JOIN EBOOK USING (PUBLISH_ID)
GROUP BY PUBLISHER.NAME, EBOOK.TITLE
ORDER BY MAXPAGES;

/* Finds all books that are overdue. */
SELECT CHECKOUT.BOOK_ID, BOOK.TITLE, CHECKOUT.DATE_DUE
FROM CHECKOUT JOIN BOOK 
ON CHECKOUT.BOOK_ID = BOOK.BOOK_ID
WHERE DATE_DUE < SYSDATE
GROUP BY CHECKOUT.BOOK_ID, BOOK.TITLE, DATE_DUE
ORDER BY TITLE;